"use strict";var f=require("semver"),h=require("https");function m(e){return new Promise((t,s)=>{h.get(e,n=>{let i="";n.on("data",r=>{i+=r}),n.on("end",()=>{t(JSON.parse(i))})}).on("error",n=>{s(n)})})}module.exports={runtimes:[{name:"electron",url:"https://raw.githubusercontent.com/electron/releases/master/lite.json",cache:null,matcher:e=>e.map(t=>({version:t.version,abi:t.deps?parseInt(t.deps.modules,10):0}))},{name:"node",url:"https://nodejs.org/dist/index.json",cache:null,matcher:e=>e.map(t=>({version:t.version.replace("v",""),abi:parseInt(t.modules,10)}))},{name:"nw.js",url:"https://raw.githubusercontent.com/nwjs/website/master/src/versions.json",cache:null,matcher:async e=>{let t=[];for(let s of e.versions){let n=s.components.node,i=await module.exports.getAbi(n,"node");if(i){let r={version:s.version.replace("v",""),abi:i};t.push(r)}}return t}}],async _getVersions(e){if(e.cache)return e.cache;let s=await await m(e.url);return e.cache=s,s},_findRuntime(e){return this.runtimes.find(t=>t.name===e)},_filterBeta(e){let t=e;return e.version&&(t=e.version),!t.includes("beta")},_filterNightly(e){let t=e;return e.version&&(t=e.version),!t.includes("nightly")},_filterRC(e){let t=e;return e.version&&(t=e.version),!t.includes("rc")},async getAbi(e,t){let s=this._findRuntime(t),i=(await s.matcher(await this._getVersions(s))).find(r=>r.version===e);if(i)return i.abi},async getTarget(e,t){let s=this._findRuntime(t);return(await s.matcher(await this._getVersions(s))).filter(r=>r.abi===e).sort((r,a)=>f.compare(a.version,r.version))[0].version},async getRange(e,t,{includeIntermediates:s=!1,includeNightly:n=!1,includeBeta:i=!1,includeReleaseCandidates:r=!1}={}){let a=this._findRuntime(t),o=(await a.matcher(await this._getVersions(a))).filter(c=>c.abi===e).sort((c,u)=>f.compare(c.version,u.version)).map(c=>c.version);return i||(o=o.filter(this._filterBeta)),n||(o=o.filter(this._filterNightly)),r||(o=o.filter(this._filterRC)),s?o:[o[0],o[o.length-1]]},async getAll({includeNightly:e=!1,includeBeta:t=!1,includeReleaseCandidates:s=!1}={}){let n=[];for(let i of this.runtimes){let r=this._findRuntime(i.name),a=await r.matcher(await this._getVersions(r));a.forEach(l=>l.runtime=i.name),n.push(...a)}return t||(n=n.filter(this._filterBeta)),e||(n=n.filter(this._filterNightly)),s||(n=n.filter(this._filterRC)),n},async getRuntime(e,t=!1){let s=await this.getAll();return t?s.filter(n=>n.version===e):s.filter(n=>n.version===e).map(n=>n.runtime)}};
//# sourceMappingURL=index.cjs.map